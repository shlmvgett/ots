plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.4'
}

sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15

dependencies {
//    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
//    implementation("org.springframework.boot:spring-boot-starter-test")
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation("org.springframework.boot:spring-boot-starter-websocket")

    implementation("org.webjars:webjars-locator-core")
    implementation("org.webjars:sockjs-client")
    implementation("org.webjars:stomp-websocket")
    implementation("org.webjars:bootstrap")

    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.postgresql:postgresql'
    implementation 'com.google.code.findbugs:jsr305'

    implementation("com.google.code.gson:gson:${Versions.gson}")
    implementation project(':L32-messages:MessageSystem')

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}
